<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
	<display-name>RegistroOfertasDCMWeb</display-name>
	<context-param>
       <param-name>webAppRootKey</param-name>
       <param-value>RegistroOfertasDCMWeb</param-value>
    </context-param>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
		<welcome-file>faces/login.jspx</welcome-file>
	</welcome-file-list>
	
    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>	
    
    <error-page>
    	<error-code>500</error-code>
    	<location>
    		/error.html
    	</location>
    </error-page>	
	
	<!-- LOG4J (Spring) -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF//log4j.properties</param-value>
	</context-param>
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>1000</param-value>
	</context-param>	
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<!-- SPRING -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/beans.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>

	<!-- JSF -->
	<servlet>
		<servlet-name>Faces Servlet</servlet-name>
		<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>/faces/*</url-pattern>
	</servlet-mapping>

	<!-- FACELETS -->
	<context-param>
		<description>Escogemos la extension de los ficheros</description>
		<param-name>javax.faces.DEFAULT_SUFFIX</param-name>
		<param-value>*.jspx</param-value>
	</context-param>
	<context-param>
		<description>Comprueba cambios en los ficheros cada cierto tiempo (-1 en produccion)</description>
		<param-name>facelets.REFRESH_PERIOD</param-name>
		<param-value>5</param-value>
	</context-param>
	<context-param>
		<description>Proporciona mensajes de error estupendisimos</description>
		<param-name>facelets.DEVELOPMENT</param-name>
		<param-value>true</param-value>
	</context-param>
	<context-param>
		<param-name>org.ajax4jsf.VIEW_HANDLERS</param-name>
		<param-value>com.sun.facelets.FaceletViewHandler</param-value>
	</context-param>
	<context-param>
     	<param-name>javax.faces.DISABLE_FACELET_JSF_VIEWHANDLER</param-name>
     	<param-value>true</param-value>
	</context-param>
	
	<!-- RICH FACES -->
	<!-- Plugging the "Blue Sky" skin into the project -->
	<context-param>
	   <param-name>org.richfaces.SKIN</param-name>
	   <param-value>blueSky</param-value>
	</context-param>
	
	<!-- Making the RichFaces skin spread to standard HTML controls -->
	<context-param>
	      <param-name>org.richfaces.CONTROL_SKINNING</param-name>
	      <param-value>enable</param-value>
	</context-param>
	 
	<!-- Defining and mapping the RichFaces filter -->
	<filter> 
	   <display-name>RichFaces Filter</display-name> 
	   <filter-name>richfaces</filter-name> 
	   <filter-class>org.ajax4jsf.Filter</filter-class> 
	   		<init-param>
	   			<param-name>createTempFiles</param-name>
	   			<param-value>true</param-value>
	   		</init-param>
	   		<init-param>
	   			<param-name>maxRequestSize</param-name>
	   			<param-value>10000000</param-value>
	   		</init-param>
	</filter> 
	  
	<filter-mapping> 
	   <filter-name>richfaces</filter-name> 
	   <servlet-name>Faces Servlet</servlet-name>
	   <dispatcher>REQUEST</dispatcher>
	   <dispatcher>FORWARD</dispatcher>
	   <dispatcher>INCLUDE</dispatcher>
	</filter-mapping>
	<!-- HASTA AQUÃ­ RICH FACES -->		


	<!-- TOMAHAWK -->
	<filter>
		<filter-name>MyFacesExtensionsFilter</filter-name>
		<filter-class>org.apache.myfaces.webapp.filter.ExtensionsFilter</filter-class>
	</filter>
	
	<!-- extension mapping for adding <script/>, <link/>, and other resource tags to JSF-pages  -->
	<filter-mapping>
	    <filter-name>MyFacesExtensionsFilter</filter-name>
	    <!-- servlet-name must match the name of your javax.faces.webapp.FacesServlet entry -->
	    <servlet-name>Faces Servlet</servlet-name>
	</filter-mapping>
	
	<!-- extension mapping for serving page-independent resources (javascript, stylesheets, images, etc.)  -->
	<filter-mapping>
	    <filter-name>MyFacesExtensionsFilter</filter-name>
	    <url-pattern>/faces/myFacesExtensionResource/*</url-pattern>
	</filter-mapping>
	

	<!-- SEGURIDAD -->
	<filter>
		<display-name>FiltroSeguridad</display-name>
		<filter-name>FiltroSeguridad</filter-name>
		<filter-class>net.gefco.filtroseguridad.FiltroSeguridad</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>FiltroSeguridad</filter-name>
		<url-pattern>/faces/seguro/*</url-pattern>
	</filter-mapping>

	<!-- HIBERNATE -->
	<filter>
		<filter-name>openSessionInViewFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
		<init-param>
	      	<param-name>singleSession</param-name>
	      	<param-value>false</param-value>
    	</init-param>
	</filter>
	<filter-mapping>
		<filter-name>openSessionInViewFilter</filter-name>
		<url-pattern>*.jspx</url-pattern>
	</filter-mapping>

	<!-- JNDI -->
	<resource-ref>
		<res-ref-name>jdbc/Registro_Ofertas_DCM_DS</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
		<res-sharing-scope>Shareable</res-sharing-scope>		
	</resource-ref>
	
</web-app>